# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-frontend:
    runs-on: self-hosted
    strategy:
      matrix:
        node-version: [18.x]
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    - name: Install dependencies (Frontend)
      run: npm ci
      working-directory: ./frontend
    - name: Build (Frontend)
      run: npm run build --if-present
      working-directory: ./frontend
    - name: Setup .env (Frontend)
      run: |
        touch .env
        echo "MONGO_URI=${{ secrets.MONGO_URI }}" > .env
      working-directory: ./frontend

  build-backend:
    needs: build-frontend
    runs-on: self-hosted
    strategy:
      matrix:
        node-version: [18.x]
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    - name: Install dependencies (Backend)
      run: npm ci
      working-directory: ./backend
    - name: Build (Backend)
      run: npm run build --if-present
      working-directory: ./backend
    - name: Setup .env (Backend)
      run: |
        touch .env
        echo "MONGO_URI=${{ secrets.MONGO_URI }}" > .env
      working-directory: ./backend


